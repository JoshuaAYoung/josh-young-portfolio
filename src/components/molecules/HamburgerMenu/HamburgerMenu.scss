// Using CSS variables so that we can auto-change with a media query
:root {
  --wide-menu-line: 30px;
  --menu-line-height: 3px;
  --menu-line-radius: 2px;
}

@media (max-width: $max-small), (max-height: $max-sm-height) {
  :root {
    --wide-menu-line: 24px;
    --menu-line-height: 2px;
    --menu-line-radius: 1px;
  }
}

$button-size: 40px;
$medium-menu-line: calc(var(--wide-menu-line) * 0.75);
$short-menu-line: calc(var(--wide-menu-line) * 0.5);
$menu-line-top-offset: calc(var(--wide-menu-line) * -0.275);
$menu-line-bottom-offset: calc($menu-line-top-offset * -1);
$menu-item-padding: 5rem;

.hamburger-menu-container {
  display: flex;
  justify-content: flex-end;
  height: $button-size;
  width: $button-size;

  .hamburger-menu-trigger-container {
    position: absolute;
    z-index: 9999;

    .hamburger-menu-trigger {
      display: flex;
      align-items: center;
      justify-content: flex-end;
      width: $button-size;
      height: $button-size;
      padding-right: calc(($button-size - var(--wide-menu-line)) / 2);

      & span,
      & span:after,
      & span:before {
        content: '';
        display: block;
        height: var(--menu-line-height);
        background: var(--primary-color);
        transition: var(--transition-duration);
        backface-visibility: hidden;
        right: 0;
        border-radius: var(--menu-line-radius);
      }

      // middle line
      & span {
        width: $short-menu-line;
        position: relative;

        // top line
        &:before {
          width: $medium-menu-line;
          top: round(down, $menu-line-top-offset, 1px);
          position: absolute;
        }

        // bottom line
        &::after {
          width: var(--wide-menu-line);
          top: round(up, $menu-line-bottom-offset, 1px);
          position: absolute;
        }
      }

      &.menu-open {
        & span {
          width: var(--wide-menu-line);
          transform: rotate(45deg);

          &:before {
            width: var(--wide-menu-line);
            transform: translate(0px, round(up, $menu-line-bottom-offset, 1px))
              rotate(-90deg);
          }

          &::after {
            transform: translate(0px, round(down, $menu-line-top-offset, 1px))
              rotate(-90deg);
          }
        }
      }

      // prevent hover styling on touch devices, gets stuck orange and left justified on click
      @media not all and (hover: none) {
        &:hover {
          & span,
          & span:after,
          & span:before {
            background: var(--secondary-color);
          }
        }

        &:not(.menu-open):hover {
          & span {
            transform: translate(
              calc((var(--wide-menu-line) - $short-menu-line) * -1),
              0
            );
          }

          & span:before {
            transform: translate(calc($medium-menu-line - $short-menu-line), 0);
          }

          & span:after {
            transform: translate(
              calc(var(--wide-menu-line) - $short-menu-line),
              0
            );
          }
        }
      }
    }
  }

  .hamburger-menu {
    position: fixed;
    top: 0;
    right: 0;
    width: 100vw;
    height: 100vh;
    background-color: var(--background-dark);
    display: flex;
    justify-content: center;
    align-items: flex-end;
    flex-direction: column;
    will-change: transform;

    .hamburger-menu-list {
      display: flex;
      flex-direction: column;
      position: relative;
      align-items: flex-end;

      @media screen and (max-height: $max-sm-height) {
        padding-right: 40px;
      }

      .hamburger-menu-list-item {
        display: flex;
        width: 100%;
        justify-content: flex-end;
        will-change: transform;
        position: relative;

        .hamburger-menu-item-button {
          font-size: 2.4rem;
          font-weight: 800;
          color: var(--primary-color);
          line-height: 4.5rem;
          position: relative;
          margin: 0 $menu-item-padding;
          transition: color 0.75s;

          &::after {
            content: '';
            position: absolute;
            bottom: 0;
            right: 0;
            height: 2px;
            background: var(--secondary-color);
            width: 0;
            transition: width 1s cubic-bezier(0.5, -0.5, 0.25, 1.5);
          }

          @media not all and (hover: none) {
            &:hover {
              color: var(--secondary-color);
            }
          }
        }

        &.active .hamburger-menu-item-button {
          color: var(--secondary-color);

          &.menu-open::after {
            width: 100%;
          }
        }
      }

      .hamburger-menu-social-container {
        align-self: flex-end;
        padding-right: 4rem;
        margin-top: 3rem;
        will-change: transform;
      }
    }
  }
}
